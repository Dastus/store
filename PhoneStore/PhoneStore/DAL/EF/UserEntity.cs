//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhoneStore.DAL.EF
{
    using System;
    using System.Collections.Generic;
    using PhoneStore.Models;
    using PhoneStore.BL.Service;
    
    public partial class UserEntity : IStorageModel<User>
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public UserEntity()
        {
            this.Phones = new HashSet<PhoneEntity>();
        }
    
        public int UserId { get; set; }
        public System.DateTime RegDate { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Password { get; set; }
        public string Cookie { get; set; }
        public string Email { get; set; }
        public string ContactPhone { get; set; }
        public bool IsActive { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PhoneEntity> Phones { get; set; }

        public User ConvertToApplicationModel()
        {
            User user = new User()
            {
                FirstName = this.FirstName,
                LastName = this.LastName,
                Password = this.Password,
                Email = this.Email,
                ContactPhone = this.ContactPhone,
                IsActive = this.IsActive,
                Cookie = this.Cookie,
                RegDate = this.RegDate
            };

            return user;
        }

        public IStorageModel<User> FromApplicationModel(User model)
        {
            if (model == null)
                return null;
            UserEntity userEntity = new UserEntity()
            {
                FirstName = model.FirstName,
                LastName = model.LastName,
                Password = model.Password,
                Email = model.Email,
                ContactPhone = model.ContactPhone,
                IsActive = model.IsActive,
                Cookie = model.Cookie,
                RegDate = model.RegDate
            };

            return userEntity;
        }
    }
}
